import React, { useState } from 'react';
import { Button, Modal } from 'antd';
import './grant.modal.scss';
import AvatarUser from '../user/avatar';
import { useDispatch, useSelector } from 'react-redux';
import axios from '../../utils/axios';
import { sendNotifyToChatRealTime } from '../../utils/handleChat';
import { editGroup } from '../../redux/actions/app.action';
import { socket } from '../../utils/io';

const GrantModal = ({ children, chat }) => {
    const [isModalOpen, setIsModalOpen] = useState(false);
    const user = useSelector(state => state.appReducer?.userInfo?.user);
    const dispatch = useDispatch();
    const [selected, setSelected] = useState(null);


    const showModal = () => {
        setIsModalOpen(true);
    };
    const handleOk = async () => {
        const res = await axios.put('/chat/group/grant', {
            chatId: chat._id,
            memberId: selected.id
        });

        const kq = await sendNotifyToChatRealTime(chat._id, `üéâ ${selected.userName} ƒë√£ tr·ªü th√†nh tr∆∞·ªüng nh√≥m üéâ`)
        if (res.errCode === 0 && kq === true) {
            dispatch(editGroup(res.data));
            socket.then(socket => {
                socket.emit('grant', res.data);
            })
        }
        setIsModalOpen(false);
    };
    const handleCancel = () => {
        setSelected(null);
        setIsModalOpen(false);
    };

    const handleGrantLeader = async (item) => {
        setSelected(item);
    }

    return (
        <>
            <span onClick={showModal}>
                {children}
            </span>
            <Modal title="Chuy·ªÉn quy·ªÅn tr∆∞·ªüng nh√≥m" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>
                <div className='grant-modal-container'>
                    <div className='note'>
                        Ng∆∞·ªùi ƒë∆∞·ª£c ch·ªçn s·∫Ω tr·ªü th√†nh tr∆∞·ªüng nh√≥m v√† c√≥ m·ªçi quy·ªÅn qu·∫£n l√Ω nh√≥m.
                        B·∫°n s·∫Ω m·∫•t quy·ªÅn qu·∫£n l√Ω nh∆∞ng v·∫´n l√† m·ªôt th√†nh vi√™n c·ªßa nh√≥m. H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ kh√¥i ph·ª•c.
                    </div>
                    <div className='main-content'>
                        {
                            chat?.participants?.map((item, index) => {
                                if (user?.id !== item.id) {
                                    return (
                                        <div key={index} className={`group-user ${selected?.id === item.id ? 'selected' : ''}`}
                                            onClick={() => handleGrantLeader(item)}

                                        >
                                            <AvatarUser
                                                image={item?.avatar}
                                                name={item?.userName}
                                            />
                                            <p className='name'>{item?.userName}</p>
                                        </div>
                                    )
                                } else return null
                            })
                        }
                    </div>
                </div>
            </Modal>
        </>
    );
};
export default GrantModal;